var kartya = function () {
  var szin1 = randomInteger(4) + 1;
  var figura1 = randomInteger(4) + 1;
  var szin2 = randomInteger(4) + 1;
  var figura2 = randomInteger(4) + 1;
  var huzas1 = [szin1,figura1];
  var huzas2 = [szin2,figura2];
  condition(!(szin1 == szin2 && figura1 == figura2) && 
            (!(szin1 == 1) || !(figura2 == 1)) &&
            (!(szin2 == 1) || !(figura1 == 1))
             );
           
  return huzas1;
  };

var eloszlas = Enumerate(kartya);

print(eloszlas);

viz.auto(eloszlas);

4.1.b. feladat

var válasz_összes = function () {
  var szin1 = randomInteger(4) + 1;
  var figura1 = randomInteger(4) + 1;
  var szin2 = randomInteger(4) + 1;
  var figura2 = randomInteger(4) + 1;
  var huzas1 = [szin1,figura1];
  var huzas2 = [szin2,figura2];
  condition(!(szin1 == szin2 && figura1 == figura2) && 
            (!(szin1 == 1) || !(figura2 == 1)) &&
            (!(szin2 == 1) || !(figura1 == 1)) && szin2 == 1 && figura2 == 2);
           
  return [huzas1, huzas2];
  };

var választ_kedvező = function () {
  var szin1 = randomInteger(4) + 1;
  var figura1 = randomInteger(4) + 1;
  var szin2 = randomInteger(4) + 1;
  var figura2 = randomInteger(4) + 1;
  var huzas1 = [szin1,figura1];
  var huzas2 = [szin2,figura2];
  condition(!(szin1 == szin2 && figura1 == figura2) && 
            (!(szin1 == 1) || !(figura2 == 1)) &&
            (!(szin2 == 1) || !(figura1 == 1)) && szin2 == 1 && figura2 == 2 &&
           szin1 == 2 && (figura1 == 3 || figura1 == 4));
           
  return [huzas1, huzas2];
  };

var kedvező = Enumerate(választ_kedvező);
var összes = Enumerate(válasz_összes);

viz.auto(kedvező);
viz.auto(összes);

print("p = " + kedvező.supp.length / összes.supp.length)

4.2. feladat

var newData = [{k: 28}, {k: 31}, {k: 44}, {k: 29}];

var extendedModel = function() {
  var data = [{k: 5}, {k: 16}, {k: 17}].concat(newData); 

  var m = gaussian(32, 10); 
  
  map(function(d) {
    observe(Gaussian({mu: m, sigma: 1}), d.k);
  }, data);

  var Prior = gaussian(32, 10); 
  
  var PredictivePosterior = gaussian(m, 1); 

  return {
    Prior: Prior, 
    Posterior: m,
    PosteriorPredictive: PredictivePosterior
  };
}

var opts = {method: 'SMC', particles: 2000, rejuvSteps: 5};

var output_1 = Infer(opts, extendedModel);

viz.marginals(output_1);
